// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String @default("shahin123")
  role  String @default("user")
  contactNo String
  address String
  profileImg String

  createdAt              DateTime             @default(now())
  updatedAt              DateTime             @updatedAt

  user Booking[] 
  reviews Review[]


  @@map("users")
}

model Service {
  id String @id @default(uuid())
  serviceName String 
  serviceCode Int
  service_image String
  category ServiceCategory
  schedule ServiceSchedule
  price Int
  description String
  per_course_students Int? @default(0)
  location String
  serviceAuthor String
  acceptable_students Int? @default(20)
  status UserEnrolledServiceStatus

  createdAt              DateTime             @default(now())
  updatedAt              DateTime             @updatedAt

  service Booking[]
  reviews Review[]


  @@map("services")
}

model Booking {
  id String @id @default(uuid())


  userId          String
  user            User           @relation(fields: [userId], references: [id])

  serviceid       String
  service         Service        @relation(fields: [serviceid], references: [id])

  category        ServiceCategory
  schedule        ServiceSchedule
  status          BookingStatus  @default(PENDING)
  student_type    StudentType    @default(NORMAL_STUDENT)


  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt

  @@map("bookings")
}

model Review {
  id String @id @default(uuid())


  userId          String
  user            User           @relation(fields: [userId], references: [id])

  serviceid       String
  service         Service        @relation(fields: [serviceid], references: [id])

 reatingCount     Int            @default(5)

 review_Comment   String        


  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt

  @@map("reviews")
}




enum UserEnrolledServiceStatus {
  ONGOING
  COMPLETED
  WITHDRAWN
}

enum ServiceSchedule {
  MORNING_2_4 
  AFTERNOON_4_6 
  EVENING_6_8 
}

enum ServiceCategory {
  MONTHLY
  YOURLY
  THREE_MONTH
  SIX_MONTH
}

enum BookingStatus {
  PENDING
  COMPLETED
}

enum StudentType {
  NORMAL_STUDENT
  SHOOLE
  COLLEGE
  UNIVERCITY
}